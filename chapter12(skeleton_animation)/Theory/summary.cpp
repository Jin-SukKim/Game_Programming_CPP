/*
    프로젝트

    뼈대 애니메이션을구현한다
    SkeletalMeshComponenet, Animation, Skeleton 클래스를 생성하고
    스키닝 버텍스 셰이더(Skinned.vert)도 생성해준다.

    캐릭터가 보이도록 카메라를 follow camera로 설정한다.
    이번 follow camera는 SkeletalMeshComponent를 사용해 애니메이션을 연출한다.

    캐릭터가 서 있을 떄는 idle 애니메이션이 재생되며 플레이어가 이동할 떄는 running 애니메이션이 재생된다.
    이 두 애니메이션 전환은 현재 부드럽지 않다.

    요약

    뼈대 애니메이션에서 캐릭터는 움직이는 강체 뼈대를 가지며, 
    vertex는 이 뼈대로 변형되는 스킨처럼 동작한다.
    뼈대는 계층적인 본으로 구성되며, 루트를 제외한 모든 본은 부모 본을 가진다.

    바인드 포즈는 모든 애니메이션에 앞선 뼈대의 초기 자세다. (T형태처럼 생겼다)
    개발자는 바인드 포즈상에서 각 본의 부모로부터 상대적인 위치와 방향을 나타내는 로컬 포즈를 저장해야 한다.
    (본의 좌표)
    전역 포즈(변환)는 오브젝트 공간에 대한 본의 위치와 방향을 표현한다.
    본의 로컬 포즈를 해당 부모의 전역 포즈로 곱하면 해당 본의 전역 포즈를 구할 수 있다.

    루트 본의 로컬 포즈와 전역 포즈는 동일하다.

    인버스 바인드 포즈 행렬은 각 본의 전역 바인드 포즈 행렬의 역행렬이다.
    이 행렬은 오브젝트 공간에 있는 점을 바인드 포즈 상에있는 본의 좌표 공간으로 변환한다.

    애니메이션은 시간이 지남에 따라 재생되는 일련의 포즈 모음이다.
    바인드 포즈와 마찬가지로 각 본의 현재 포즈에 대한 전역 포즈 행렬도 계산하는 것이 가능하다.
    이 현재 포즈 행렬은 바인드 포즈상의 본 좌표 공간에 있는 점을 현재 포즈상의 오브젝트 공간 좌표로 변환한다.

    행렬 팔레트는 각 본의 인버스 바인드 포즈 행렬과 현재 포즈 행렬의 곱을 저장한다.
    스키닝 버텍스의 오브젝트 공간 위치를 계산할 때는 vertex에 영향을 주는 모든 본의 행렬 팔레트 항목을 사용한다.

    연습 

    1. 애니메이션을 재생할 떄 게임이 본의 위치를 얻는 것은 유용할 때가 많다.
    ex) 캐릭터가 오브젝트를 잡을 때 애니메이션이 바뀔 때 본의 위치를 알아야한다.
        아니면 아이템을 제대로 잡을 수 없기 때문이다.

        SkeletalMeshComponent는 애니메이션의 진행 상황을 알고 있으므로 본의 위치르 얻는
        시스템에 대한 코드는 여기에 구현하면 좋다.
        먼저 현재 포즈 행렬을 저장하기 위해 std::vector 멤버 변수를 추가한다.
        그 후 코드가 GetGlobalPoseAtTime 함수 호출 시 이 멤버 변수로 현재 포즈 행렬을 저장한다.

        다음으로 본의 이름을 인자로 받고 현재 포즈에 있는 본의 오브젝트 공간 위치를 반환하는 GetBonePosition 함수를 추가한다.
        본의 현재 행렬에 제로 백터를 곱하면 현재 포즈에 있는 본의 오브젝트 공간 위치를 얻을 수 있으므로 쉽다.
        제로 벡터는 본의 로컬 공간의 원점에 정확히 있으며, 
        현재 포즈 행렬은 제로 벡터를 오브젝트 공간으로 변환해줘 잘 동작한다.

    2. 현재 애니메이션은 바로 새로운 애니메이션으로 전환된다.
        이러면 애니메이션 간 전환이 부드럽지 않다.
        애니메이션간 블렌딩을 추가하면 연출이 더 자연스러워 진다.

        먼저 PlayAnimation에 블렌딩 지속 시간을 나타내는 블렌딩 시간 파라미터를 추가한다.
        그리고 각 애니메이션과 애니메이션 지속 시간을 별도로 기록한다.
        2개의 애니메이션으로만 블렌딩하는 것으로 제한을 두면 이 멤버 변수들은 한 번만 복사하면 된다.

        그 후 GetGlobalPoseAtTime 함수를 호출할 시 애니메이션을 블렌딩하기 위해
        두 활성화된 애니메이션으로 동작하도록 수정한다.
        각 애니메이션에서 모든 본의 본 변환을 얻고 이 본 변환들을 보간해서
        최종 변환을 얻는다
        최종 변환을 포즈 행렬로 바꿔 블렌딩된 현재 포즈를 얻는다.

*/