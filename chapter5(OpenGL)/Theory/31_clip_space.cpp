/*
    클립 공간(clip space)

    세계 변환 행렬을 사용해 vertex를 세계 공간으로 변환했다.
    이후 vertex를 vertex shader가 원하는 출력인 클립 공간으로 변환해야 한다.

    클립 공간은 정규화된 장치 좌표(NDC)의 가까운 친척에 해당한다.
    차이점은 클립 공간이 w 요소를 갖고 있다는 점이다.
    그래서 셰이더의 gl_Position 변수는 vertex 위치를 저장하기 위해 vect4로 선언됐다.

    뷰-투영 행렬(view-projection matrix)은 세계 공간을 클립 공간으로 변환시킨다.
    뷰-투영 행렬은 2개의 행렬을 가진다.

    1. 뷰 행렬
        - 가상 카메라가 게임 세계를 바라보는 방법
    2. 투영 행렬
        - 가상 카메라의 시점으로부터 클립 공간으로 변환하는 방법

    (나중에 더 자세히 공부한다)

    지금은 2D 게임이므로 간단한 행렬이다.

    정규화된 장치 좌표에서는 화면의 외쪽 하단부가 (-1, -1)이고 오른쪽 상단은 (1, 1)이다.
    화면 스크롤이 없는 2D게임의 경우 게임 세계는 간단하게 윈도우의 해상도(1024x768)등으로 간단하게 생각할 수 있다.

    즉, 창의 중심이 세계 공간의 원점이고 세계 공간에서의 단위와 창의 화면 픽셀이 1:1 비율인 세계 공간의 시점을 고려한다.
    이 경우 1단위 위로 이동하면 창에서 1픽셀씩 위로 이동시키는 것과 같다.
    1024x768 해상도에서 창 왼쪽 아래가 (-412, -384), 오른쪽 상단이 (512, 384)이다.

    이런 세계 시점에서 세계 공간을 클립 공간으로 변환하는 것은 쉽다.
    단순히 x좌표를 너비/2로 나누고, y좌표를 높이/2로 나누면 된다.

    2D 동차 좌표의 행렬 형태의 뷰-투영 행렬

    SimpleViewProjection =  | 2/width       0       0 |
                            |   0       2/height    0 |
                            |   0           0       1 |

    이 식이 잘 동작하는 이유는 정규화된 장치 좌표처럼 x축 [-512, 512] 범위를 [-1, 1]로 정규화했고,
    y축의 [-384, 384] 범위를 [-1, 1]로 정규화했기 때문이다.

    세계 변환 행렬과 뷰-투영 행렬을 결합하면 오브젝트 공간의 임의이 점을
    클립 공간으로 변환하는 것이 가능해진다.

    v' = v * (WorldTransform)(SimpleViewProjevtion), v = 점 벡터

*/