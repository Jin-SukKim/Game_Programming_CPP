/*
    SDL 렌더러는 2D 그래픽은 지원하지만 3D 그래픽은 지원하지 않는다.

    OpenGL은 2D/#D 클로스 플랫폼 그래픽을 위한 산업 표준 라이브러리다.
    GLEW를 사용한다.
    
    OpenGL 윈도우 설정

    SDL로 윈도우를 생성하는 경우 SDL_CreateWindow의 마지막 파라미터에 SDL_WINDOW_OPENGL을
    인자로 넘겨서 OpenGL사용하는 윈도우를 요청한다.

    SDL_Renderer를 OpenGL로 바꿔줘야한다.

    OpenGL 윈도우 생성하기 전 버전이나 색상 깊이, 몇몇 파라미터에 대한 속성 설정이 가능하다.

    SDL_GL_SetAttribute(
		SDL_GLattr attr,	// 설정할 속성
		int value			// 해당 속성의 값
	);

    OpenGL은 3개의 주요 프로파일을 지원한다.

    1. 코어
    2. 호환성
    3. ES

    코어 프로파일은 데스크톱 환경에서 추천하는 기본 프로파일이다.
    호황선 프로파일과의 차이점은 호환성은 프로그램에서 더이상 사용되지 않는
    OpenGL 함수의 호출을 허락한다는 점이다.
    ES 프로파일은 모바일 개발을 위한 용도로 사용된다.

    OpenGL 3.3버전은 현재 프로젝트에서 사용하는모든 기능을 지원하며,
    ES 프로파일과 밀접하게 연관된 기능 세트를 가지고 있다.(모바일에서도 잘 작동한다.)

    각 색상 채널의 비트 깊이를 지정할 수 있다. RGBA 8비트씩 요청하면 픽셀당 32비트 크기를 가진다.
    더블 버퍼링과 하드웨어 가속(GPU)을 사용할 수 있다.

    OpenGL 속성이 설정되고 윈도우를 생성하면 OpenGL 콘텍스트(context)를 생성한다.
    콘텍스트는 OpenGL이 인식하는 모든 상태나 오브젝트를 포함하는 OpenGL의 세계다.

    색상 깊이, 로드된 이미지나 모델, 그리고 열ㅓ다양한 OpenGL 오브젝트를 포함한다.
    (하나의 OpenGL 프로그램에 여러 개의 콘텍스트 생성이 가능하지만 지금은 하나만 생성한다.)
    
    윈도우를 생성하고 제거하는 것처럼 OpenGL의 콘텍스트도 소멸자에서 제거해줘야 한다.

    이제 OpenGL 콘텍스트 생성하지만 3.3 기능에 대한 완전한 접근을 얻기 위해선 하나를 더 해줘야 한다.
    OpenGL은 확장 시스템과의 하위 호환성을 지원한다.
    이 확장 기능을 사용하려면 일반적으로 좀 지루하지만, 원하는 기능을 수동으로 요청해야 한다.

    이 과정을 간소화하기 위해 GLEW(OpenGL Extension Wrangler Library)라 불리는 오픈 소스 라이브러리를 사용한다.
    GLEW는 함수 호출로 자동적으로 현재 OpenGL Context 버전에서 지원하는 모든 확장 함수를 초기화한다.

    일부 플랫폼에서 GLEW는 초기화 시 에러 코드는 내보내므로 glGetError 함수 호출해 에러 코드 제거를 해준다.

    프레임 렌더링(Frame Rendering)

    OpenGL 함수를 사용하려면 화면을 클리어하고 장면을 그린 뒤 버퍼를 스왑하는 과정이 필요하다.
    glClearColor(), glClear() ,SDL_GL_SwapWindow()를 활용해 수행한다.

    색상을 설정하고 glClear로 색상 버퍼를 설정한 색상으로채운다.
    그리고 전면 버퍼와후면 버퍼를 교체한다.
    

*/