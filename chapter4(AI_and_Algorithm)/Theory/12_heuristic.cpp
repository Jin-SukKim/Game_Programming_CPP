/*
    휴리스틱(heuristic) - 경험적 방법

    많은 탐색 알고리즘은 예상되는 결과를 근사하는 함수인 휴리스틱 방법에 의존한다.

    길 찾기에서 휴리스틱은 주어진 노드로부터ㅁ고표 노드까지의 예상되는 비용이다.
    경로를 더 빨리 찾는데 도움을 준다.

    BFS의 각 반복마다 BFS는 다음 노드가 목표로부터 멀어지는 방향에 있다 하더라도
    큐에서 해당 노드를 꺼낸다.
    휴리스틱을 사용하면 특정 노드가 목표에 얼마나 가까운지 예상할 수 있으며,
    그래서 좀 더 가까운 노드를 살펴본다.
    결국 반복 횟수를 줄여서 빨리 종료하는 것이 가능해진다.

    휴리스틱 = h(x), x = 그래프상의 노드, 즉 h(x) = 노드 x에서 목표 노드까지의 추정 비용

    휴리스틱 함수는 노드 x에서 목표까지의 실제 비용보다 같거나 작으면 항상 허용된다.
    만약 비용이 크게 평가된다면 휴리스틱을 허용되선 안되며 사용하지 말아야한다.

    나중의 A* 알고리즘은 최단 경로를 보장하기 위해 허용 가능한 휴리스틱이 필요하다.

    사각형 격자에서 휴리스틱을 계산하는 데는 2가지 방법이 있따.
    1. 맨해튼 거리(Manhattan distance) 
        - 대도시의 도시 구획을 따라 이동하는 것과 유사하다
        - 대각선의 이동은 유효하지 않다고 가정한다.
        - 대각선 이동이 유효하면 맨해튼 거리는 종종 비용을 초과 평가한다.
        - 제곱근을 사용하지 않으므로 계산에 효율적이다.

        2D 격자에서의 맨해튼 거리 공식
        h(x) = |start.x - end.x| + |start.y - end.y|

    2. 유클리드 거리(Euclidean distance)
        - 표준 거리 공식을 사용해 휴리스틱을 계산
        - 일직선으로 경로를 평가한다
        - 사각형 격자보다 좀 더 복잡한 세계에서 잘 동작한다.
        - 맨해튼 거리에서 허용되지 않는 경우에도 거의 항상 허용가능하다.

        2D에서 유클리드 거리 방정식
        h(x) = sqrt((start.x - end.x)^2 + (start.y - end.y)^2)

    유클리드 거리가 실제 비용을 초과하는 경우는 게임이 레벨에 존재하는
    두 노드 사이를 텔레포트하는 것과 같은 비유클리드 이동을 허락하는 경우다.

    휴리스틱 함수는 인접 리스트에 관해 아무런 정보도 없기에 특정 지역을 지날 수 있는지
    없는지를 알지 못해목표 노드로 가는 길이 막혀있는 경우 실제 비용을 낮게 평가한다.
    하지만 휴리스틱이 노드 x가 목표 노드에 얼마나 가까운지에 대한 하한 경계가 되므로 괜찮다.

    즉, 노드 x가 적어도 휴리스틱이 산출한 거리만큼은 떨어져 있음을 보장한다.

    상대적인 관점에서 유용한 정보이다.
    노드 A, B 중 어느 노드가 목표 노드에 더 가까운지를 추정할 수 있고
    이 추정치를 이용해 A, B중 어떤 노드로 탐색할 지 결정할 수 있따.
*/