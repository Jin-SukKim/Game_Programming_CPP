/*
    데이크스트라 알고리즘(Dijskstra's algorithm)

    휴리스틱을 기반으로 선택된 경로는 단지 추정에 불가하기에 실제로
    최단 경로가 아닐 수도 있따.

    Dijkstra's algorithm에는 시작 노드는 있지만 목표는 없다.
    대신 데이크스트라는 그래프상의 시작 노드에서 모든 도달 가능한
    노드까지의 거리를 계산한다.
    모든 경로의 실제 이동 비용을 구해서 최단 거리를 구할 수 있게 된다.

    A* 알고리즘은 Dijkstra's algorithm으로 변환 가능하다.
    h(x), 휴리스틱, 요소를 제거하면(h(x) = 0, 휴리스틱 함수와 등가라는 걸 뜻한다)
    실제 비용보다 같거나 낮음을 보장하기 때문에 허용될 수 있다.

    다음으로 목표 노드를 제거하고 열린 집합이 빌 때만 루프를 종료하도록 한다.
    그럼 코드는 시작점에부터 모든 도달 가능한 노드에 대한 경로 비용 g(x)를 계산한다.

    이 알고리즘의 원 공식은 조금 다르다.
    하지만 이번 챕터에서의 접근법은 기능적으로 원래 공식과 동일하다.
    (AI서적에서는 이 접근법을 균일 비용 탐색,uniform cost search,라고 불린다)
    
    게임에선 A*같은 경험 기반에 둔 접근법을 선호하는데 노드 탐색의 수가 훨씬 적기 때문이다.

*/