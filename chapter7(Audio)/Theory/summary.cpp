/*
    요약

    대부분의 게임에선 단순히 사운드 파일을 재생하는 것이 아닌 오디오 시스템이 필요하다.
    FMOD API를 사용해 프로덕션 수준의 사운드 시스템을 게임에 구현할 수 있따.

    오디오 시스템은 bank와 재생 이벤트를 로드한다.
    SoundEvent 클래스는 처리 중인 이벤트 인스턴스를 관리하고
    이 인스턴스의 조작을 가능하게 해준다.

    위치 기반 오디오는 3D 환경에서의 사운드를 시뮬레이션한다.
    리스너의 속성과 모든 3D 이벤트 인스턴스를 설정함으로써 오디오는
    듣는 사람이 실제 3D 환경에 있는 것처럼 작동한다.

    1인친 게임은 리스너로 카메라의 위치와 방향을 직접 사용할 수 있었던 반면
    3인친 게임은 보다 복잡하다.
    3인칭 게임은 플레이어와 카메라의 위치를 기반으로 한 계산으로
    가상 오디오 위치를 만들어야 한다.

    빠르게 움직이는 물체의 경우 도플러 효과는 물체가
    접근하거나 멀어질 때 사운드의 피치를 변경한다.

    믹싱은 사운드 환경에 좀 더 세밀한 제어를 제공한다.
    버스는 다양한 소리들을 카테고리로 그룹화해 
    그룹화별로 독립적인 제어를 가능하게 해준다.

    스냅샷은 실행시에 리버브와 같은 DSP 효과를 활성화/비활성화를 가능하게 해
    동적으로 버스를 변경시킨다.

    차폐는 표면을 통과한 사운드를 시뮬레이션한다.

    연습 

    1. 속도 파라미터가 올바르게 설정되도록 리스너와 이벤트 인스턴스 속성 코드를 수정한다.
    도플러 효과 테스트를 위해 Game::LoadData에서 생성된 구 엑터를
    앞뒤로 빠르게 이동시키자.
    도플러 효과의 세기 조절을 위해 set3DSettings를 사용한다.
    올바르게 동작한다면 발사 루프 소리에서 도플러 효과를 지각할 수 있어야 한다.

    2. 3인칭 리스너 공식을 사용해 이벤트 인스턴스의 가상 위치를 구현해본다.
    CameraActor 클래스를 변경해 3인칭 카메라 구현이 필요하다.
*/