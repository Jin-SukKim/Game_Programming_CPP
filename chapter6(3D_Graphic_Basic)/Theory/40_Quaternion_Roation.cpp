/*
    오브젝트 회전시키기

    오브젝트가 x축을 향하고 위치 S에 있을 때 임의의 점 P를 향하도록 회전
    
    1. 먼저 새로운 지점으로의 벡터를 계산한 뒤 이 벡터를 정규화한다.

    NewFacing = (P-S) / (||P-S||), 향하고자 하는 방향

    2. 그리고 초기에 향한 방향과 대상 물체를 향항 방향의 외적을 통해 회전축을 계산 후 정규화

    // x축을 향하고 있으므로 3D vector는 (1, 0, 0)이 된다.
    a = ((1, 0, 0) x NewFacing) / (||(1, 0, 0) x NewFacing||), 회전축 정규화

    외적의 결과가 0인 경우 두 벡터가 평행하다는 의미이므로 회전을 적용할 필요가 없다.
    그리고 분모는 0이 될수 없다.
    벡터가 평행한 경우 방향만 확인해줘 서로 반대 방향을 향하면 상향 벡터 기준으로 PI radian(180도) 회전시켜준다.

    3. 다음으로 내적과 arccos을 사용해 회전 각도를 계산한다.

    각도 = arccos((1,0,0)*NewFacing)

    4. 마지막으로 구한 회전축과 각도를 결합해 점 P로 향하는 우주선의 회전을 나타내는 쿼터니언을 생성한다.

    q = [qv, qs]
    qv = a * sin(각도 / 2)
    qs = cos(각도 / 2)

    P가 3D 공간상의 어떤 위치에 있다 하더라도 이 프로세스는 잘 동작한다.

    회전 결합

    쿼터니언의 또 다른 일반 연산 중 하나틑 기존 쿼터니언에 추가 회전을 적용하는 것이다.
    두 쿼터니언 p, q가 주어졌을 때 그라스만 곱(Grassmann product)은 대상을 q로 회전한 뒤 p로 회전시킨다.

    x = 외적, * = 내적, v = 벡터, s = 스칼라
    (pq)v = psqv + qspv + pv x qv, 
    (pq)s = psqs - pv * qv

    곱셈에서 q의 왼쪽에 p가 있더라도 회전은 오른쪽에서 왼쪽 순서로 적용된다.
    또한 그라스만 곱은 외적을 사용하므로 교환할 수 없다.
    p와 q의 순서를 바꾸면 회전 순서도 바뀐다.

    행렬과 유사하게 쿼터니언은 역 쿼터니언을 가진다.
    단위 쿼터니언에서 쿼터니언의 역은 벡터 요소를 반전시킨면 된다.

    q^-1 = [-qv, qs]

    역 쿼터니언이 있으므로 다음과 같이 정의된 항등 쿼터니언도 있다.

    iv = (0, 0, 0)
    is = 1

    벡터를 쿼터니언으로 회전시키기

*/