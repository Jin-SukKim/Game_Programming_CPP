/*
    입력 매핑

    현재 InputState에서 데이터 사용시 특정 입력 장치와 키가
    직접 액션에 매핑하고있다고 가정하고 있따.

    ex) bool jump = state.Keyboard.GetKeyState(SDL_SCANCODE_SPACE) == Pressed;
    
    이 방법은 잘 동작하지만 이상적으로는 추상적인 점프 액션을 정의하는것이 좋다.
    그 후 게임 코드에서 점프가 스페이스바에 해당한다고 지정하는 매커니즘을 구현하면 된다.

    이를 위해추상적인 액션과 추상적인 액션에 대응하는 [장치, 버튼] 쌍 사이의
    맵이 필요하다.

    동일한 추상 액션에 여러 바인딩을 허용하면 시스템을 더욱더 향상시킬수 있다.
    (ex: 스페이스바와 컨트롤러 A 버튼을 동시에 '점프'로 바인딩)

    또 다른 추상 액션의 이점은 AI가 제어하는 캐릭터가 동일한 액션을 수행하기가 수월해진다.

    그리고 W 및 S키 또는 컨트롤러 축 하나에 해당하는 ForwardAxis 액션 같은
    축을 따른 이동의 정의를 가능하게 해준다.
    즉, 이 액션ㅇ르 사용하면 게임엣 ㅓ캐릭터의 움직임을 구체적으로 지정하는 것이 가능하다.

    이런타입 매핑을 사용하기 위해선 파일로부터 매핑 데이터를 로드하는
    매커니즘을 추가해야 한다.
    그러면 코드 수정 없이 매핑 설정이 가능해진다.
*/